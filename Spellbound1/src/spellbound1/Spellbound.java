/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package spellbound1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Map;
import java.util.Random;
import java.util.Set;
import java.util.TreeMap;

public class Spellbound extends javax.swing.JFrame { 
   String [] Buttons = new String [5];
   String [] Buttons1 = new String [3];
   int score = 0;
   String word = "";
   String letter;
   //replaced Z with P, and Q with T, Z with R
   String [] alphabet = {"B", "C", "D", "F", "G", "H", "J", "K", "L", "M", "N", "P", "T", "R", "S", "T", "V", "W", "P", "Y", "R" };
   String [] vowels  = {"A", "E", "I", "O", "U"};
  ArrayList<String> words = new ArrayList<>();
  String rightWords = "";
  String playerName;
  TreeMap savedScores = new TreeMap();
  
    public Spellbound() {
        initComponents();
         File textFile = new File("words.txt");
           FileReader in;
           BufferedReader readFile;
           String line;
            try {
                in = new FileReader(textFile);
                readFile = new BufferedReader(in);
                while((line = readFile.readLine()) != null){
                    words.add(line);
                }
                readFile.close();
                in.close();
           }catch(FileNotFoundException e) {
               System.out.println("File could not be found");
               System.out.println("FileNotFoundException: " + e.getMessage());
           } catch (IOException e){
                System.out.println("Problem reading file");
                System.err.println("Exception Error: " + e.getMessage());
            }
            String[] wordArray = words.toArray( new String[words.size()] );
            int length = wordArray.length;
            for (int a = 0; a < length;  a++){
                for (int b = 1; b<length-1;  b++){
                    if (wordArray[a].compareTo(wordArray[b]) < 0){
                        String temp = wordArray[a];
                        wordArray[a] = wordArray[b];
                        wordArray[b] = temp;
                    }
            }
            }
            ArrayList<String> words =  new ArrayList<>(Arrays.asList(wordArray));
             words.remove(wordArray[0]);
            words.add(wordArray[0]);    
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Word = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Letter1 = new javax.swing.JButton();
        Letter2 = new javax.swing.JButton();
        Letter3 = new javax.swing.JButton();
        Letter4 = new javax.swing.JButton();
        Letter5 = new javax.swing.JButton();
        Letter6 = new javax.swing.JButton();
        Letter7 = new javax.swing.JButton();
        Backspace = new javax.swing.JButton();
        EnterWord = new javax.swing.JButton();
        NewGame = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Score = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        saveScore = new javax.swing.JButton();
        PlayerName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        namesOut = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        scoresOut = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Letter8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Word.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Word.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Word.setToolTipText("");

        jLabel2.setBackground(new java.awt.Color(51, 0, 102));
        jLabel2.setFont(new java.awt.Font("Showcard Gothic", 3, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Spellbound");

        Letter1.setBackground(new java.awt.Color(51, 0, 102));
        Letter1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Letter1.setForeground(new java.awt.Color(255, 51, 51));
        Letter1.setText("NEW");
        Letter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Letter1ActionPerformed(evt);
            }
        });

        Letter2.setBackground(new java.awt.Color(51, 0, 102));
        Letter2.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Letter2.setForeground(new java.awt.Color(255, 153, 51));
        Letter2.setText("NEW");
        Letter2.setToolTipText("");
        Letter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Letter2ActionPerformed(evt);
            }
        });

        Letter3.setBackground(new java.awt.Color(51, 0, 102));
        Letter3.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Letter3.setForeground(new java.awt.Color(255, 255, 51));
        Letter3.setText("NEW");
        Letter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Letter3ActionPerformed(evt);
            }
        });

        Letter4.setBackground(new java.awt.Color(51, 0, 102));
        Letter4.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Letter4.setForeground(new java.awt.Color(204, 255, 204));
        Letter4.setText("NEW");
        Letter4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Letter4ActionPerformed(evt);
            }
        });

        Letter5.setBackground(new java.awt.Color(51, 0, 102));
        Letter5.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Letter5.setForeground(new java.awt.Color(7, 198, 255));
        Letter5.setText("NEW");
        Letter5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Letter5ActionPerformed(evt);
            }
        });

        Letter6.setBackground(new java.awt.Color(51, 0, 102));
        Letter6.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Letter6.setForeground(new java.awt.Color(153, 51, 255));
        Letter6.setText("NEW");
        Letter6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Letter6ActionPerformed(evt);
            }
        });

        Letter7.setBackground(new java.awt.Color(51, 0, 102));
        Letter7.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Letter7.setForeground(new java.awt.Color(255, 102, 255));
        Letter7.setText("NEW");
        Letter7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Letter7ActionPerformed(evt);
            }
        });

        Backspace.setBackground(new java.awt.Color(51, 0, 102));
        Backspace.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        Backspace.setForeground(new java.awt.Color(204, 255, 204));
        Backspace.setText("Backspace");
        Backspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackspaceActionPerformed(evt);
            }
        });

        EnterWord.setBackground(new java.awt.Color(51, 0, 102));
        EnterWord.setFont(new java.awt.Font("Showcard Gothic", 0, 20)); // NOI18N
        EnterWord.setForeground(new java.awt.Color(204, 255, 204));
        EnterWord.setText("Enter");
        EnterWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterWordActionPerformed(evt);
            }
        });

        NewGame.setBackground(new java.awt.Color(51, 0, 102));
        NewGame.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        NewGame.setForeground(new java.awt.Color(204, 255, 204));
        NewGame.setText("Play a New Game");
        NewGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewGameMouseClicked(evt);
            }
        });
        NewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewGameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Showcard Gothic", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Top Scores");

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Words");

        jLabel4.setFont(new java.awt.Font("Showcard Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 51));
        jLabel4.setText("Current Score:");

        Score.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        Score.setText("0");

        jLabel5.setBackground(new java.awt.Color(51, 0, 102));
        jLabel5.setFont(new java.awt.Font("Showcard Gothic", 0, 20)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        saveScore.setBackground(new java.awt.Color(51, 0, 102));
        saveScore.setFont(new java.awt.Font("Showcard Gothic", 0, 13)); // NOI18N
        saveScore.setForeground(new java.awt.Color(204, 255, 204));
        saveScore.setText("Save Score");
        saveScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveScoreActionPerformed(evt);
            }
        });

        PlayerName.setFont(new java.awt.Font("Showcard Gothic", 0, 15)); // NOI18N
        PlayerName.setForeground(new java.awt.Color(0, 0, 255));
        PlayerName.setText("Please enter your name");
        PlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayerNameActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Showcard Gothic", 0, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Names");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel9.setFont(new java.awt.Font("Showcard Gothic", 0, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Scores");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        namesOut.setColumns(20);
        namesOut.setLineWrap(true);
        namesOut.setRows(5);
        namesOut.setWrapStyleWord(true);
        jScrollPane1.setViewportView(namesOut);

        scoresOut.setColumns(20);
        scoresOut.setLineWrap(true);
        scoresOut.setRows(5);
        scoresOut.setWrapStyleWord(true);
        jScrollPane2.setViewportView(scoresOut);

        jButton1.setText("QUIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("INSTRUCTIONS");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Modern No. 20", 0, 16)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("1. Press PLAY A NEW \nGAME to start a new game.\n2. Spell a word by pressing the \nletters using the buttons\n3. Press Backspace  to delete a \nletter\n4. Press ENTER to check if \nthe word exists\n5. Enter your name and press \nsave score to save it to the \nleaderboard\n6. Play again or press QUIT \nin the top left to exit");
        jScrollPane3.setViewportView(jTextArea1);

        Letter8.setBackground(new java.awt.Color(51, 0, 102));
        Letter8.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        Letter8.setForeground(new java.awt.Color(255, 255, 255));
        Letter8.setText("NEW");
        Letter8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Letter8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Letter1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Letter2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PlayerName)
                            .addComponent(saveScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Letter3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Letter8, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(Word, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(209, 209, 209)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Backspace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(EnterWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(37, 37, 37)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Score))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jButton1)
                .addGap(73, 73, 73)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NewGame, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(NewGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Score)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addComponent(PlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(305, 305, 305))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Word, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(Backspace, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EnterWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Letter1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Letter2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Letter3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Letter4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Letter5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Letter6, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Letter7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Letter8, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        
    private void BackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackspaceActionPerformed
        letter = word.substring(word.length()-1);
       for (int i = 0; i<Buttons.length; i++){
           if (Buttons[i].equals(letter) ){
               if (Letter1.isEnabled() == false && Letter1.getText().equals(Buttons[i])) {
                   Letter1.setEnabled(true);
               }
                if (Letter2.isEnabled() == false && Letter2.getText().equals(Buttons[i])) {
                   Letter2.setEnabled(true);
               }
                 if (Letter3.isEnabled() == false && Letter3.getText().equals(Buttons[i])) {
                   Letter3.setEnabled(true);
               }
                  if (Letter4.isEnabled() == false && Letter4.getText().equals(Buttons[i])) {
                   Letter4.setEnabled(true);
               } 
                if (Letter5.isEnabled() == false && Letter5.getText().equals(Buttons[i])) {
                   Letter5.setEnabled(true);
               }                        
               } 
       }
        for (int i = 0; i<Buttons1.length; i++){
            if (Buttons1[i].equals(letter)){
             if (Letter6.isEnabled() == false && Letter6.getText().equals(Buttons1[i])) {
                   Letter6.setEnabled(true);
               }
                if (Letter7.isEnabled() == false && Letter7.getText().equals(Buttons1[i])) {
                   Letter7.setEnabled(true);
               }                  
                if (Letter8.isEnabled() == false && Letter8.getText().equals(Buttons1[i])) {
                   Letter8.setEnabled(true);
               }                   
            }
        }
       word = word.substring(0, word.length() - 1);
       Word.setText(word);             
    }//GEN-LAST:event_BackspaceActionPerformed

    private void EnterWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterWordActionPerformed
    boolean checked = words.contains(word);
    if (checked == true){
        score += word.length();
       Score.setText(String.valueOf(score));
        Word.setText("");
        rightWords = rightWords + "  " + word;
        words.remove(word);
        word =  "";
        Letter1.setEnabled(true);
        Letter2.setEnabled(true);
        Letter3.setEnabled(true);
        Letter4.setEnabled(true);
        Letter5.setEnabled(true);
        Letter6.setEnabled(true);
        Letter7.setEnabled(true);
        Letter8.setEnabled(true);
        jLabel5.setText(rightWords);
    }
    }//GEN-LAST:event_EnterWordActionPerformed

public void NewGame(){
            Score.setText("0");
            score = 0;
            Word.setText("");
            word = "";
            Letter1.setEnabled(true);
            Letter2.setEnabled(true);
            Letter3.setEnabled(true);
            Letter4.setEnabled(true);
            Letter5.setEnabled(true);
            Letter6.setEnabled(true);
            Letter7.setEnabled(true);
            Letter8.setEnabled(true);
            rightWords = "";
            jLabel5.setText(rightWords);
            score = 0;
            Score.setText(String.valueOf(score));
            for (int i = 0; i< Buttons.length; i++){
           Random x = new Random();
           int letterNumber = x.nextInt(21);
          Buttons[i] = alphabet[letterNumber];
        } 
       for (int i=0; i<Buttons1.length; i++){
           Random x = new Random();
           int letterNumber = x.nextInt(5);
          Buttons1[i] = vowels[letterNumber];
       }
        Letter1.setLabel(Buttons[0]);
        Letter2.setLabel(Buttons[1]);
        Letter3.setLabel(Buttons[2]);
        Letter4.setLabel(Buttons[3]);
        Letter5.setLabel(Buttons[4]);
        Letter6.setLabel(Buttons1[0]);
        Letter7.setLabel(Buttons1[1]);
        Letter8.setLabel(Buttons1[2]);
} 
    
    private void NewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewGameActionPerformed
       NewGame();
    }//GEN-LAST:event_NewGameActionPerformed

    private void NewGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewGameMouseClicked
      NewGame();
    }//GEN-LAST:event_NewGameMouseClicked

    private void Letter4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Letter4ActionPerformed
        if (word.length() < 4){
             this.letter = Letter4.getText();
             word = word.concat(letter);
            Word.setText(word);
            Letter4.setEnabled(false);
        }
    }//GEN-LAST:event_Letter4ActionPerformed

    private void Letter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Letter1ActionPerformed
        if (word.length() < 4){
            this.letter = Letter1.getText();
             word = word.concat(letter);
            Word.setText(word);
            Letter1.setEnabled(false);
        }
    }//GEN-LAST:event_Letter1ActionPerformed

    private void Letter2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Letter2ActionPerformed
        if (word.length() < 4) {
              this.letter = Letter2.getText();
             word = word.concat(letter);
             Word.setText(word);
            Letter2.setEnabled(false);
        }
    }//GEN-LAST:event_Letter2ActionPerformed

    private void Letter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Letter3ActionPerformed
        if (word.length() < 4){
            this.letter = Letter3.getText();
            word = word.concat(letter);
            Word.setText(word);
            Letter3.setEnabled(false);
        }
    }//GEN-LAST:event_Letter3ActionPerformed

    private void Letter5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Letter5ActionPerformed
        if (word.length() < 4) {
            this.letter = Letter5.getText();
            word = word.concat(letter);
            Word.setText(word);
            Letter5.setEnabled(false);
        }
    }//GEN-LAST:event_Letter5ActionPerformed

    private void Letter6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Letter6ActionPerformed
       if (word.length() < 4){
            this.letter = Letter6.getText();
            word = word.concat(letter);
            Word.setText(word);
            Letter6.setEnabled(false);
       }
    }//GEN-LAST:event_Letter6ActionPerformed

    private void Letter7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Letter7ActionPerformed
        if (word.length() < 4) {
             this.letter = Letter7.getText();
            word = word.concat(letter);
            Word.setText(word);
            Letter7.setEnabled(false);
        }
    }//GEN-LAST:event_Letter7ActionPerformed

    public void printScore(){
         Set data = savedScores.entrySet();
        Iterator x = data.iterator();
        String names = "";
        String scores = "";
        int count = 0;
           while (x.hasNext()){
               Map.Entry player = (Map.Entry)x.next();
               names += player.getKey() + "\n";
               scores += String.valueOf(player.getValue()) + "\n";
           }
          
        namesOut.setText(names);
        scoresOut.setText(scores);
    }
    
    private void saveScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveScoreActionPerformed
        playerName = PlayerName.getText().toUpperCase();
        savedScores.put(playerName, score);
        printScore();
        NewGame();
    }//GEN-LAST:event_saveScoreActionPerformed
 
    private void PlayerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayerNameActionPerformed
        PlayerName.setText(" ");
    }//GEN-LAST:event_PlayerNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Letter8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Letter8ActionPerformed
         if (word.length() < 4) {
             this.letter = Letter8.getText();
            word = word.concat(letter);
            Word.setText(word);
            Letter8.setEnabled(false);
         }
    }//GEN-LAST:event_Letter8ActionPerformed

    /**
     *
     * @param args
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Spellbound.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Spellbound.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Spellbound.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Spellbound.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Spellbound().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backspace;
    private javax.swing.JButton EnterWord;
    private javax.swing.JButton Letter1;
    private javax.swing.JButton Letter2;
    private javax.swing.JButton Letter3;
    private javax.swing.JButton Letter4;
    private javax.swing.JButton Letter5;
    private javax.swing.JButton Letter6;
    private javax.swing.JButton Letter7;
    private javax.swing.JButton Letter8;
    private javax.swing.JButton NewGame;
    private javax.swing.JTextField PlayerName;
    private javax.swing.JLabel Score;
    private javax.swing.JLabel Word;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea namesOut;
    private javax.swing.JButton saveScore;
    private javax.swing.JTextArea scoresOut;
    // End of variables declaration//GEN-END:variables

}

